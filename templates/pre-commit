#!/bin/sh
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(php|inc|module|install|theme)$')
STAGED_FILES_PHP=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(php|inc|module|install|theme)$')
STAGED_FILES_JS=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|mjs|jsx|cjs)$')
STAGED_FILES_CSS=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(css|sass|scss)$')

if [ -z "$STAGED_FILES" ]; then
  exit 0
fi

if [ -n "STAGED_FILES_PHP" ]; then
  echo "üîç Running PHP CodeSniffer on staged files:"
  echo "$STAGED_FILES_PHP"

  # Autofix Section
  echo "üé® Attempting auto-fixes..."
  phpcbf --standard=phpcs.xml.dist $STAGED_FILES
  git add $STAGED_FILES

  # ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è HERE WE ADD A MESSAGE ‚¨áÔ∏è‚¨áÔ∏è‚¨áÔ∏è
  echo "üí° Auto-fixes applied. Check 'git diff --staged' for changes."
  # ‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è END OF ADDING MESSAGE ‚¨ÜÔ∏è‚¨ÜÔ∏è‚¨ÜÔ∏è

  echo "üö¶ Checking code quality..."
  phpcs --standard=phpcs.xml.dist -d memory_limit=1024M --report=json --runtime-set timeout 300 $STAGED_FILES > ./.git/report.json

  phpcs --standard=phpcs.xml.dist -d memory_limit=1024M --runtime-set timeout 300 $STAGED_FILES
fi


php ./.git/hooks/pre-commit.php

PHPCS_EXIT_CODE=$?

if [ $PHPCS_EXIT_CODE -ne 0 ]; then
  echo "‚ùå PHP CodeSniffer found issues! Commit blocked."
  echo "‚ÑπÔ∏è To attempt auto-fixes, run: composer run lint-fix"
  exit 1
fi

exit 0
